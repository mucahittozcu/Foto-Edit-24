import { useState } from 'react'
import './styles.css'
export default function App() {
  const [filter, setFilter] = useState({
    brightness: 1,
    contrast: 1,
    saturation: 1,
  })

  /* Challenge

    Range input'larÄ± henÃ¼z hiÃ§bir ÅŸey yapmÄ±yor. Sizin gÃ¶reviniz bunlarÄ± aÅŸaÄŸÄ±daki gibi Ã§alÄ±ÅŸtÄ±rmaktÄ±r: 
    
        1. KullanÄ±cÄ± range input kaydÄ±rÄ±cÄ±larÄ±ndan birini her hareket ettirdiÄŸinde, filter state nesnesindeki karÅŸÄ±lÄ±k gelen deÄŸer, deÄŸiÅŸmeyen diÄŸer iki deÄŸer korunarak input deÄŸeri olacak ÅŸekilde gÃ¼ncellenmelidir. 
           
        2. Filter state nesnesinin her gÃ¼ncellemesinde, --brightness, --contrast ve 
           --saturation gÃ¶rÃ¼ntÃ¼nÃ¼n filter Ã¶zelliklerini kontrol eden CSS deÄŸiÅŸkenleri, karÅŸÄ±lÄ±k gelen filter state nesne Ã¶zelliklerinin deÄŸerleri olacak ÅŸekilde gÃ¼ncellenmelidir. Ä°lgili CSS, styles.css dosyasÄ±nÄ±n 1-13 satÄ±rlarÄ±nda bulunabilir. 
		                       
        3. Range input'larÄ±nÄ±n baÅŸlangÄ±Ã§ deÄŸerleri, filter state nesnesindeki karÅŸÄ±lÄ±k gelen Ã¶zelliklerinin baÅŸlangÄ±Ã§ deÄŸerleri olmalÄ±dÄ±r.   
		   
		4. Kodunuzu mÃ¼mkÃ¼n olduÄŸunca DRY yapmaya Ã§alÄ±ÅŸÄ±n
*/

// Bu iÅŸlev, bir input alanÄ±nÄ±n deÄŸeri deÄŸiÅŸtiÄŸinde tetiklenecek olan olay iÅŸleyicisidir. propertyName ve value parametreleri alÄ±r. setFilter iÅŸlevi kullanÄ±larak, Ã¶nceki filtre durumunu (...pre) yayÄ±lÄ±m operatÃ¶rÃ¼ ile kopyalar ve ardÄ±ndan propertyName ile belirtilen Ã¶zelliÄŸin deÄŸerini value ile gÃ¼nceller. AyrÄ±ca, document.documentElement.style.setProperty() yÃ¶ntemi kullanÄ±larak, CSS deÄŸiÅŸkeni (--propertyName) de gÃ¼ncellenir. //
const handleInputChange = (propertyName,value) => {
  setFilter((pre) => ({
    ...pre,
    [propertyName]: value 
  }))
  document.documentElement.style.setProperty(`--${propertyName}`,value)
}


  return (
    <div className='main-container'>
      <h1>
        <span>ðŸ“·</span> Photo EditÃ¶rÃ¼ <span>ðŸ“·</span>
      </h1>

      <div className='image-container'>
        <img src='./images/kunal-goswami-CuUn__aMGD4-unsplash.jpg' />
      </div>

      <form>

      {/* Object.entries(filter) yÃ¶ntemi kullanÄ±larak, filter nesnesinin key ve value iÃ§eren bir [dizi] oluÅŸturulur. Bu dizi map() fonksiyonu ile dÃ¶ngÃ¼ye alÄ±nÄ±r ve her bir key ve value Ã§ifti iÃ§in bir input alanÄ± oluÅŸturulur. Bu input alanlarÄ±, range tÃ¼rÃ¼nde olup, kullanÄ±cÄ±nÄ±n filtre deÄŸerlerini ayarlamasÄ±na izin verir. DeÄŸerler, filter state'inden alÄ±nÄ±r ve handleInputChange iÅŸlevi ile deÄŸiÅŸtirilir. Her bir input alanÄ±nÄ±n yanÄ±nda, filtrenin adÄ±nÄ±n baÅŸ harfi bÃ¼yÃ¼k olacak ÅŸekilde gÃ¶rÃ¼nen bir etiket bulunur. */}
        {Object.entries(filter).map(([property,value]) => (

          <label key={property}>
         <input
          type='range' 
          name={property}
          // input alanÄ±nÄ±n baÅŸlangÄ±Ã§ deÄŸerini belirler. //
          defaultValue={filter[property]} 
          onChange={(e) => handleInputChange(property , e.target.value)}
          value={value} 
           min={0}
           max={2} 
           step={0.1} 
          />
          <span>{property.charAt(0).toUpperCase() + property.slice(1)}</span>
        </label>
          ))}
      </form>
    </div>
  )
}
      // DRY deÄŸil //

// <div className='main-container'>
// <h1>
//   <span>ðŸ“·</span> Photo EditÃ¶rÃ¼ <span>ðŸ“·</span>
// </h1>

// <div className='image-container'>
//   <img src='./images/kunal-goswami-CuUn__aMGD4-unsplash.jpg' />
// </div>

// <form>
//   <label>
//    <input
//     type='range' 
//     name='brightness' 
//     // input alanÄ±nÄ±n baÅŸlangÄ±Ã§ deÄŸerini belirler. //
//     defaultValue={filter.brightness} 

//     // input alanÄ±nÄ±n deÄŸeri her deÄŸiÅŸtiÄŸinde tetiklenir. Bu olay yeni deÄŸeri alÄ±r filtre durumunu gÃ¼nceller ve CSS deÄŸiÅŸkenini gÃ¼nceller. //
//     onChange={(e) => {
//       const newBrightness =  e.target.value; 
//       setFilter({...filter,brightness: newBrightness})
//       document.documentElement.style.setProperty("--brightness",newBrightness)
//   }}
//      value={filter.brightness}
//     min={0} max={2} step={0.1}
//      />
//     <span>Brightness</span>
//   </label>

//   <label>
//     <input 
//     type='range' 
//     name='contrast' 
//     defaultValue={filter.contrast} 
//     onChange={(e) => {
//       const newContrast = e.target.value;
//       setFilter({...filter,contrast: newContrast})
//       document.documentElement.style.setProperty("--contrast",newContrast)
//     }}
//       value={filter.contrast}
//      min={0} max={2} step={0.1} 
//      />
//     <span>Contrast</span>
//   </label>

//   <label>
//     <input 
//     type='range' 
//     name='saturation' 
//     defaultValue={filter.saturation} 
//     onChange={(e) => {
//       const newSaturation = e.target.value;
//       setFilter({...filter,saturation: newSaturation })
//       document.documentElement.style.setProperty("--saturation",newSaturation)
//   }}
//    value={filter.saturation} 
//     min={0} max={2} step={0.1} 
//     />
//     <span>Saturation</span>
//   </label>
// </form>
// </div>